import type { BaseDocument } from '@dungeon-lab/shared/types/index.mjs';
export interface DocumentSheetStore<T extends BaseDocument = BaseDocument> {
    id: string;
    document: T;
    position: {
        x: number;
        y: number;
    };
    size?: {
        width: number;
        height: number;
    };
    zIndex: number;
}
export declare const useDocumentSheetStore: import("pinia").StoreDefinition<"documentSheet", Pick<{
    floatingSheets: import("vue").Ref<Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>, Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>> | (Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>)>;
    openDocumentSheet: <T extends BaseDocument>(document: T) => void;
    closeDocumentSheet: (id: string) => void;
    bringToFront: (id: string) => void;
    updatePosition: (id: string, x: number, y: number) => void;
    updateSize: (id: string, width: number, height: number) => void;
    updateDocument: <T extends BaseDocument>(id: string, document: T) => void;
}, "floatingSheets">, Pick<{
    floatingSheets: import("vue").Ref<Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>, Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>> | (Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>)>;
    openDocumentSheet: <T extends BaseDocument>(document: T) => void;
    closeDocumentSheet: (id: string) => void;
    bringToFront: (id: string) => void;
    updatePosition: (id: string, x: number, y: number) => void;
    updateSize: (id: string, width: number, height: number) => void;
    updateDocument: <T extends BaseDocument>(id: string, document: T) => void;
}, never>, Pick<{
    floatingSheets: import("vue").Ref<Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>, Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>> | (Map<string, {
        id: string;
        document: {
            id: string;
            name: string;
            documentType: "character";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            avatarId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "actor";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "item";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
            carrierId?: string | undefined | undefined;
        } | {
            id: string;
            name: string;
            documentType: "vtt-document";
            slug: string;
            pluginDocumentType: string;
            pluginId: string;
            pluginData: Record<string, unknown>;
            itemState: Record<string, unknown>;
            state: {
                [x: string]: any;
                turnState?: any;
                sessionState?: any;
                encounterState?: any;
                persistentState?: any;
            };
            userData: Record<string, any>;
            description?: string | undefined | undefined;
            source?: string | undefined | undefined;
            createdBy?: string | undefined | undefined;
            updatedBy?: string | undefined | undefined;
            ownerId?: string | undefined | undefined;
            campaignId?: string | undefined | undefined;
            compendiumId?: string | undefined | undefined;
            compendiumEntryId?: string | undefined | undefined;
            imageId?: string | undefined | undefined;
            thumbnailId?: string | undefined | undefined;
            tokenImageId?: string | undefined | undefined;
        };
        position: {
            x: number;
            y: number;
        };
        size?: {
            width: number;
            height: number;
        } | undefined;
        zIndex: number;
    }> & Omit<Map<string, DocumentSheetStore<{
        id: string;
        name: string;
        documentType: "character";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        avatarId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "actor";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "item";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
        carrierId?: string | undefined;
    } | {
        id: string;
        name: string;
        documentType: "vtt-document";
        slug: string;
        pluginDocumentType: string;
        pluginId: string;
        pluginData: Record<string, unknown>;
        itemState: Record<string, unknown>;
        state: {
            turnState?: any;
            sessionState?: any;
            encounterState?: any;
            persistentState?: any;
        } & {
            [k: string]: any;
        };
        userData: Record<string, any>;
        description?: string | undefined;
        source?: string | undefined;
        createdBy?: string | undefined;
        updatedBy?: string | undefined;
        ownerId?: string | undefined;
        campaignId?: string | undefined;
        compendiumId?: string | undefined;
        compendiumEntryId?: string | undefined;
        imageId?: string | undefined;
        thumbnailId?: string | undefined;
        tokenImageId?: string | undefined;
    }>>, keyof Map<any, any>>)>;
    openDocumentSheet: <T extends BaseDocument>(document: T) => void;
    closeDocumentSheet: (id: string) => void;
    bringToFront: (id: string) => void;
    updatePosition: (id: string, x: number, y: number) => void;
    updateSize: (id: string, width: number, height: number) => void;
    updateDocument: <T extends BaseDocument>(id: string, document: T) => void;
}, "openDocumentSheet" | "closeDocumentSheet" | "bringToFront" | "updatePosition" | "updateSize" | "updateDocument">>;
//# sourceMappingURL=document-sheet.store.d.mts.map