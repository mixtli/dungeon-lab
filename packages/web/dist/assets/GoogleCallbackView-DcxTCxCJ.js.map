{"version":3,"file":"GoogleCallbackView-DcxTCxCJ.js","sources":["../../src/views/auth/GoogleCallbackView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '@/stores/auth';\nimport { ElMessage } from 'element-plus';\nimport { Loading } from '@element-plus/icons-vue';\n\nconst router = useRouter();\nconst authStore = useAuthStore();\nconst isLoading = ref(true);\nconst errorMessage = ref('');\n\n// Debug information for development\nconst debugInfo = ref({\n  authAttempted: false,\n  authResult: false,\n  authError: '',\n  userReceived: false\n});\n\n// Create a ref for the development mode state\nconst isDev = ref(process.env.NODE_ENV === 'development');\n\nonMounted(async () => {\n  debugInfo.value.authAttempted = true;\n  \n  try {\n    // Instead of handling a token, we just fetch the user info\n    // The session cookie should already be set by the server\n    const success = await authStore.fetchUser();\n    debugInfo.value.authResult = success;\n    debugInfo.value.userReceived = !!authStore.user;\n    \n    if (success) {\n      ElMessage.success('Login successful!');\n      router.push({ name: 'home' });\n    } else {\n      errorMessage.value = authStore.error || 'Authentication failed';\n      debugInfo.value.authError = errorMessage.value;\n      ElMessage.error(errorMessage.value);\n      router.push({ name: 'login' });\n    }\n  } catch (error: any) {\n    errorMessage.value = error.message || 'Authentication failed';\n    debugInfo.value.authError = errorMessage.value;\n    ElMessage.error(errorMessage.value);\n    router.push({ name: 'login' });\n  } finally {\n    isLoading.value = false;\n  }\n});\n</script>\n\n<template>\n  <div class=\"google-callback-view\">\n    <div class=\"flex justify-center items-center min-h-[400px]\">\n      <div class=\"text-center\">\n        <el-icon v-if=\"isLoading\" class=\"animate-spin text-primary-600 mb-4\" :size=\"48\"><Loading /></el-icon>\n        <h2 class=\"text-xl font-semibold mb-2\">{{ isLoading ? 'Completing Authentication' : (errorMessage ? 'Authentication Failed' : 'Authentication Complete') }}</h2>\n        <p v-if=\"isLoading\" class=\"text-gray-600 dark:text-gray-400\">Please wait while we complete your login...</p>\n        <p v-else-if=\"errorMessage\" class=\"text-red-600 dark:text-red-400\">{{ errorMessage }}</p>\n        <p v-else class=\"text-green-600 dark:text-green-400\">Redirecting you now...</p>\n        \n        <!-- Debug info - only in development -->\n        <div v-if=\"isDev\" class=\"mt-6 p-4 bg-gray-100 dark:bg-gray-700 rounded text-left\">\n          <h3 class=\"font-semibold mb-2\">Debug Information:</h3>\n          <div><strong>Auth Attempted:</strong> {{ debugInfo.authAttempted }}</div>\n          <div><strong>Auth Result:</strong> {{ debugInfo.authResult }}</div>\n          <div><strong>Auth Error:</strong> {{ debugInfo.authError }}</div>\n          <div><strong>User Received:</strong> {{ debugInfo.userReceived }}</div>\n          <div v-if=\"authStore.user\"><strong>User:</strong> {{ authStore.user.displayName || authStore.user.username }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template> "],"names":["router","useRouter","authStore","useAuthStore","isLoading","ref","errorMessage","debugInfo","isDev","onMounted","success","ElMessage","error"],"mappings":"oqBAOA,MAAMA,EAASC,EAAU,EACnBC,EAAYC,EAAa,EACzBC,EAAYC,EAAI,EAAI,EACpBC,EAAeD,EAAI,EAAE,EAGrBE,EAAYF,EAAI,CACpB,cAAe,GACf,WAAY,GACZ,UAAW,GACX,aAAc,EAAA,CACf,EAGKG,EAAQH,EAAI,EAAsC,EAExD,OAAAI,EAAU,SAAY,CACpBF,EAAU,MAAM,cAAgB,GAE5B,GAAA,CAGI,MAAAG,EAAU,MAAMR,EAAU,UAAU,EAC1CK,EAAU,MAAM,WAAaG,EAC7BH,EAAU,MAAM,aAAe,CAAC,CAACL,EAAU,KAEvCQ,GACFC,EAAU,QAAQ,mBAAmB,EACrCX,EAAO,KAAK,CAAE,KAAM,MAAA,CAAQ,IAEfM,EAAA,MAAQJ,EAAU,OAAS,wBAC9BK,EAAA,MAAM,UAAYD,EAAa,MAC/BK,EAAA,MAAML,EAAa,KAAK,EAClCN,EAAO,KAAK,CAAE,KAAM,OAAA,CAAS,SAExBY,EAAY,CACNN,EAAA,MAAQM,EAAM,SAAW,wBAC5BL,EAAA,MAAM,UAAYD,EAAa,MAC/BK,EAAA,MAAML,EAAa,KAAK,EAClCN,EAAO,KAAK,CAAE,KAAM,OAAA,CAAS,CAAA,QAC7B,CACAI,EAAU,MAAQ,EAAA,CACpB,CACD"}