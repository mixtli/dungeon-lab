services:
  # Backend Express server
  server:
    profiles: ["app", "all"]
    build:
      context: .
      dockerfile: packages/server/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=mongodb://mongo:27017/dungeon-lab
      - SESSION_SECRET=your_session_secret_here
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=dungeon-lab
      - CLIENT_URL=${CLIENT_URL:-http://localhost:8080}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL:-http://localhost:3000/api/auth/google/callback}
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      
    depends_on:
      - mongo
      - minio
    restart: unless-stopped

  # Frontend Vue.js app
  web:
    profiles: ["app", "all"]
    build:
      context: .
      dockerfile: packages/web/Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
    ports:
      - "80:8080"
    environment:
      # Important: In the browser environment, use the host machine URL
      # not the Docker internal service name
      - VITE_DEV_PORT=80
      - VITE_API_URL=${VITE_API_URL:-http://localhost:3000}
    depends_on:
      - server
    restart: unless-stopped

  # MongoDB database
  mongo:
    image: mongo:latest
    profiles: ["infra", "all"]
    ports:
      - "27017:27017"  # Changed from 27017:27017 to avoid port conflict
    volumes:
      - ./mongo_data:/data/db
    restart: unless-stopped

  # MinIO object storage
  minio:
    image: minio/minio:latest
    profiles: ["infra", "all"]
    ports:
      - "0.0.0.0:9000:9000"  # API port - bind to all interfaces
      - "0.0.0.0:9001:9001"  # Console port - bind to all interfaces
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - ./minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Service to create the bucket and set policies
  createbuckets:
    image: minio/mc
    profiles: ["infra", "all"]
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/dungeon-lab --ignore-existing;
      /usr/bin/mc mb myminio/prefect --ignore-existing;
      /usr/bin/mc anonymous set download myminio/dungeon-lab;
      /usr/bin/mc anonymous set download myminio/prefect;
      exit 0;
      "

volumes:
  mongo_data:
  minio_data: 